"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LimiterArticleAPI = void 0;
const ImageAPI_1 = __importDefault(require("../image/ImageAPI"));
const Constants_1 = require("../utils/Constants");
const Fetch_1 = require("../utils/Fetch");
const Limiter_1 = __importDefault(require("../utils/Limiter"));
const Parse_1 = require("../utils/Parse");
const ArticleCategoryParser_1 = __importDefault(require("./ArticleCategoryParser"));
const ArticleListParser_1 = __importDefault(require("./ArticleListParser"));
const ArticleParser_1 = __importDefault(require("./ArticleParser"));
class ArticleAPI {
    static async getCategories() {
        const html = await (0, Fetch_1.fetchPage)(Constants_1.URLS.DAILY);
        return ArticleCategoryParser_1.default.parseCategories(html);
    }
    static async getArticle(params) {
        const imageConstants = await ImageAPI_1.default.getConstants();
        const opts = {
            imageBaseUrl: imageConstants.baseUrl,
            albumImageFormat: await ImageAPI_1.default.getFormat(params.albumImageFormat, 9),
            artistImageFormat: await ImageAPI_1.default.getFormat(params.artistImageFormat, 21),
            includeRawData: !!params.includeRawData
        };
        const html = await (0, Fetch_1.fetchPage)(params.articleUrl);
        return ArticleParser_1.default.parseArticle(html, opts);
    }
    static async list(params) {
        let url = params?.categoryUrl ? params.categoryUrl : (0, Parse_1.normalizeUrl)('latest', Constants_1.URLS.DAILY);
        if (params?.page) {
            url += `?page=${params.page}`;
        }
        const opts = {
            imageFormat: await ImageAPI_1.default.getFormat(params?.imageFormat)
        };
        const html = await (0, Fetch_1.fetchPage)(url);
        return ArticleListParser_1.default.parseList(html, opts);
    }
}
exports.default = ArticleAPI;
class LimiterArticleAPI extends ArticleAPI {
    static async getCategories() {
        return Limiter_1.default.schedule(() => super.getCategories());
    }
    static async getArticle(params) {
        return Limiter_1.default.schedule(() => super.getArticle(params));
    }
}
exports.LimiterArticleAPI = LimiterArticleAPI;
//# sourceMappingURL=ArticleAPI.js.map