{"version":3,"file":"Limiter.js","sourceRoot":"","sources":["../../../../src/lib/utils/Limiter.ts"],"names":[],"mappings":";;;;;AAAA,4DAAoC;AAEpC,MAAM,QAAQ,GAAG,IAAI,oBAAU,CAAC;IAC9B,aAAa,EAAE,CAAC;IAChB,OAAO,EAAE,GAAG;CACb,CAAC,CAAC;AAEH,MAAqB,OAAO;IAC1B,MAAM,CAAC,cAAc,CAAC,OAAuC;QAC3D,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED,MAAM,CAAC,QAAQ,CAAI,EAAwB;QACzC,OAAO,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;CACF;AARD,0BAQC","sourcesContent":["import Bottleneck from 'bottleneck';\n\nconst _limiter = new Bottleneck({\n  maxConcurrent: 5,\n  minTime: 200\n});\n\nexport default class Limiter {\n  static updateSettings(options?: Bottleneck.ConstructorOptions) {\n    _limiter.updateSettings(options);\n  }\n\n  static schedule<R>(fn: () => PromiseLike<R>): Promise<R> {\n    return _limiter.schedule(fn);\n  }\n}\n"]}