import ImageAPI from '../image/ImageAPI';
import { fetchPage } from '../utils/Fetch';
import AlbumInfoParser from './AlbumInfoParser';
import Limiter from '../utils/Limiter';
export default class AlbumAPI {
    static async getInfo(params) {
        const imageConstants = await ImageAPI.getConstants();
        const opts = {
            imageBaseUrl: imageConstants.baseUrl,
            albumImageFormat: await ImageAPI.getFormat(params.albumImageFormat, 9),
            artistImageFormat: await ImageAPI.getFormat(params.artistImageFormat, 21),
            includeRawData: params.includeRawData !== undefined ? params.includeRawData : false
        };
        const html = await fetchPage(params.albumUrl);
        return AlbumInfoParser.parseInfo(html, opts);
    }
}
export class LimiterAlbumAPI extends AlbumAPI {
    static async getInfo(params) {
        return Limiter.schedule(() => super.getInfo(params));
    }
}
//# sourceMappingURL=AlbumAPI.js.map