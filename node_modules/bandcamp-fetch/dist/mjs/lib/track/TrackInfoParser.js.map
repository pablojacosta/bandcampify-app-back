{"version":3,"file":"TrackInfoParser.js","sourceRoot":"","sources":["../../../../src/lib/track/TrackInfoParser.ts"],"names":[],"mappings":"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","sourcesContent":["import { load as cheerioLoad } from 'cheerio';\nimport { decode } from 'html-entities';\nimport { ImageFormat } from '../types/Image';\nimport Track from '../types/Track';\nimport { ParseError, getAdditionalPropertyValue, parseLabelFromBackToLabelLink, parsePublisher, reformatImageUrl, splitUrl } from '../utils/Parse';\nimport AlbumInfoParser from '../album/AlbumInfoParser';\n\ninterface TrackInfoParseOptions {\n  trackUrl?: string;\n  imageBaseUrl: string;\n  albumImageFormat: ImageFormat | null;\n  artistImageFormat: ImageFormat | null;\n  includeRawData: boolean;\n}\n\nexport default class TrackInfoParser {\n\n  static parseInfo(html: string, opts: TrackInfoParseOptions): Track {\n    // Some tracks don't have a dedicated '/track' url,\n    // But take this form instead: {albumUrl}#t{x}, where 'x' is the\n    // Track position. These tracks are not displayed as links nor playable.\n    // Since the album page is actually loaded, we can return the track info\n    // From the album data with parseAlbumInfo().\n    if (opts.trackUrl) {\n      const { path: trackUrlPath, hash: trackUrlHash } = splitUrl(opts.trackUrl);\n      if (trackUrlPath && trackUrlHash) {\n        const matchTrackPosInUrl = (/^\\/(album)\\/(.+)#t(\\d+)/).exec(trackUrlPath + trackUrlHash);\n        if (matchTrackPosInUrl && matchTrackPosInUrl[3]) {\n          return this.#parseTrackInfoFromAlbum(html, opts, Number(matchTrackPosInUrl[3]));\n        }\n      }\n    }\n\n    const $ = cheerioLoad(html);\n    const rawBasic = $('script[type=\"application/ld+json\"]').html();\n    const rawExtra = decode($('script[data-tralbum]').attr('data-tralbum'));\n\n    if (!rawBasic || !rawExtra) {\n      throw new ParseError('Failed to parse track info: data missing \\'ld_json\\' or \\'tralbum\\' fields.', html);\n    }\n\n    let basic, extra;\n    try {\n      basic = JSON.parse(rawBasic);\n    }\n    catch (error: any) {\n      throw new ParseError('Failed to parse track info: JSON error in basic data.', rawBasic, error);\n    }\n    try {\n      extra = JSON.parse(rawExtra);\n    }\n    catch (error: any) {\n      throw new ParseError('Failed to parse track info: JSON error in extra data.', rawExtra, error);\n    }\n\n    if (!basic || typeof basic !== 'object') {\n      throw new ParseError('Failed to parse track info: invalid basic data');\n    }\n    if (!extra || typeof extra !== 'object') {\n      throw new ParseError('Failed to parse track info: invalid extra data');\n    }\n\n    const track: Track = {\n      type: 'track',\n      name: basic.name,\n      url: basic['@id']\n    };\n\n    const imageUrl = reformatImageUrl(basic.image, opts.albumImageFormat);\n    if (imageUrl) {\n      track.imageUrl = imageUrl;\n    }\n\n    if (extra.current?.release_date) {\n      track.releaseDate = extra.current.release_date;\n    }\n\n    const duration = getAdditionalPropertyValue<number>(basic, 'duration_secs');\n    if (duration !== undefined) {\n      track.duration = duration;\n    }\n\n    const streamUrl = extra.trackinfo?.[0]?.file?.['mp3-128'];\n    if (streamUrl) {\n      track.streamUrl = streamUrl;\n    }\n\n    let byArtist;\n    if (basic.inAlbum?.byArtist) {\n      byArtist = basic.inAlbum.byArtist;\n    }\n    else {\n      byArtist = basic.byArtist;\n    }\n    if (byArtist) {\n      track.artist = {\n        name: byArtist.name\n      };\n      if (byArtist['@id']) {\n        track.artist.url = byArtist['@id'];\n      }\n    }\n\n    const publisher = parsePublisher(basic, opts.artistImageFormat);\n    if (publisher) {\n      track.publisher = publisher;\n    }\n\n    if (track.artist && !track.artist.url && publisher?.url) {\n      track.artist.url = publisher.url;\n    }\n\n    const label = parseLabelFromBackToLabelLink($);\n    if (label) {\n      track.label = {\n        name: label.name,\n        url: label.url\n      };\n    }\n\n    if (basic.inAlbum?.['@id']) {\n      track.album = {\n        name: basic.inAlbum.name,\n        url: basic.inAlbum['@id'],\n        releaseDate: extra.album_release_date\n      };\n      track.releaseDate = extra.album_release_date;\n    }\n\n    if (opts.includeRawData) {\n      track.raw = { basic, extra };\n    }\n\n    return track;\n  }\n\n  static #parseTrackInfoFromAlbum(html: string, opts: TrackInfoParseOptions, trackPosition: number): Track {\n    const album = AlbumInfoParser.parseInfo(html, opts);\n    const trackData = album.tracks?.[trackPosition - 1];\n    if (trackData) {\n      const track: Track = {\n        type: 'track',\n        name: trackData.name,\n        url: trackData.url,\n        imageUrl: album.imageUrl,\n        releaseDate: album.releaseDate,\n        duration: trackData.duration,\n        artist: album.artist,\n        publisher: album.publisher,\n        label: album.label,\n        album: {\n          name: album.name,\n          url: album.url,\n          releaseDate: album.releaseDate\n        }\n      };\n      if (trackData.streamUrl) {\n        track.streamUrl = trackData.streamUrl;\n      }\n      return track;\n    }\n\n    throw new ParseError(`Track not found in album (position: ${trackPosition}`, html);\n  }\n}\n"]}