{"version":3,"file":"ReleasesByTagParser.js","sourceRoot":"","sources":["../../../../src/lib/tag/ReleasesByTagParser.ts"],"names":[],"mappings":"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","sourcesContent":["import { load as cheerioLoad } from 'cheerio';\nimport { decode } from 'html-entities';\nimport Album from '../types/Album';\nimport { ImageFormat } from '../types/Image';\nimport { ReleasesByTag } from '../types/Tag';\nimport Track from '../types/Track';\nimport { ParseError, stripLineBreaks } from '../utils/Parse';\nimport { Interpreter } from 'eval5';\n\ninterface ReleasesByTagParseOptions {\n  imageBaseUrl: string;\n  imageFormat: ImageFormat | null;\n}\n\nexport default class ReleasesByTagParser {\n\n  static parseHubJSPath(html: string) {\n    const jsMatch = (/src=\"((?:.+?)hub-(?:.+?).js)\"/g).exec(html);\n    return jsMatch?.[1] || null;\n  }\n\n  static parseHubJSFilterValueNames(js: string): ReleasesByTag.FilterValueNames {\n    const filterValueNames: ReleasesByTag.FilterValueNames = {};\n    const tObj = (/\"hubs\\/digdeeper\\/filter_value\":(.+?)}\\),/gs).exec(js);\n    if (tObj?.[1]) {\n      const interpreter = new Interpreter({});\n      const t = interpreter.evaluate(tObj[1]);\n      if (Array.isArray(t?.[0]?.blocks)) {\n        const _getValFromBlockAttachment = (attachment: any) => {\n          if (attachment?.type === 'translate' && attachment?.nodelist?.[0] !== undefined) {\n            return stripLineBreaks(attachment.nodelist[0]).trim();\n          }\n          else if (typeof attachment === 'string') {\n            return stripLineBreaks(attachment).trim();\n          }\n\n          return '';\n\n        };\n        t[0].blocks.forEach((filterBlock: any) => {\n          const filterName = interpreter.evaluate(filterBlock.expression?.split('==')[1]);\n          if (filterName && Array.isArray(filterBlock.attachment)) {\n            filterBlock\n              .attachment.find((a: any) => Array.isArray(a?.blocks))\n              .blocks.filter((block: any) => block?.expression)\n              .forEach((valueBlock: any) => {\n                const value = interpreter.evaluate(valueBlock.expression?.split('==')[1]);\n                if (value != null && Array.isArray(valueBlock?.attachment)) {\n                  const valueName = valueBlock.attachment.reduce((a: string, c: any) => {\n                    const cVal = stripLineBreaks(_getValFromBlockAttachment(c)).trim();\n                    if (cVal !== '') {\n                      return a !== '' ? `${a} ${cVal}` : cVal;\n                    }\n\n                    return a;\n\n                  }, '');\n                  //Console.log('value name: ' + valueName);\n                  if (valueName) {\n                    if (!filterValueNames[filterName]) {\n                      filterValueNames[filterName] = {};\n                    }\n                    filterValueNames[filterName][value] = valueName;\n                  }\n                }\n              });\n          }\n        });\n      }\n    }\n    return filterValueNames;\n  }\n\n  static parseFilters(html: string, filterValueNames: ReleasesByTag.FilterValueNames): ReleasesByTag.Filter[] {\n    const $ = cheerioLoad(html);\n    const blob = decode($('#pagedata[data-blob]').attr('data-blob'));\n    const parsed = JSON.parse(blob);\n    const filters: ReleasesByTag.Filter[] = [];\n    if (typeof parsed === 'object' && parsed.hub && Array.isArray(parsed.hub.tabs)) {\n      const tab = parsed.hub.tabs[1]; // All releases\n\n      const _setOrAdd = (f: any, t: any, prop: string) => {\n        const target = f.options.find((f: any) => f.value === t.value);\n        if (target) {\n          target[prop] = true;\n        }\n        else if (t.value && t.name) {\n          const tAdd = {\n            name: t.name,\n            value: t.value\n          } as any;\n          tAdd[prop] = true;\n          f.options.push(tAdd);\n        }\n      };\n\n      if (tab && tab.dig_deeper && typeof tab.dig_deeper.filters === 'object') {\n        const filterKeys = Object.keys(tab.dig_deeper.filters);\n        filterKeys.forEach((filterName) => {\n          const filter: ReleasesByTag.Filter = {\n            name: filterName,\n            options: []\n          };\n          const filterData = tab.dig_deeper.filters[filterName];\n          if (Array.isArray(filterData?.options)) {\n            filterData.options.forEach((filterOption: any) => {\n              const valueName = filterValueNames?.[filterName]?.[filterOption?.value] || filterOption?.name || filterOption?.value;\n              if (valueName) {\n                filter.options.push({\n                  name: valueName,\n                  value: filterOption.value\n                });\n              }\n            });\n          }\n          if (typeof filterData?.selected === 'object' && !Array.isArray(filterData.selected)) {\n            _setOrAdd(filter, filterData.selected, 'selected');\n          }\n          else if (Array.isArray(filterData?.selected)) {\n            filterData.selected.forEach((s: any) => {\n              _setOrAdd(filter, s, 'selected');\n            });\n          }\n          if (filterData?.default) {\n            _setOrAdd(filter, filterData.default, 'default');\n          }\n\n          filters.push(filter);\n        });\n      }\n    }\n    return filters;\n  }\n\n\n  static parseReleases(json: any, opts: ReleasesByTagParseOptions): ReleasesByTag {\n    if (typeof json === 'object' && Array.isArray(json.items)) {\n      const parsedItems: Array<Album | Track> = [];\n      json.items.forEach((item: any) => {\n        let mediaItemType: 'album' | 'track' | null;\n        switch (item.item_type) {\n          case 'a':\n            mediaItemType = 'album';\n            break;\n          case 't':\n            mediaItemType = 'track';\n            break;\n          default:\n            mediaItemType = null;\n        }\n        if (mediaItemType) {\n          const mediaItem: Album | Track = {\n            type: mediaItemType,\n            name: item.title,\n            url: item.tralbum_url,\n            imageUrl: '',\n            genre: item.genre,\n            artist: {\n              name: item.artist,\n              url: item.band_url\n            }\n          };\n          if (item.art_id && opts.imageFormat?.id) {\n            mediaItem.imageUrl = `${opts.imageBaseUrl}/img/a${item.art_id}_${opts.imageFormat.id}.jpg`;\n          }\n          if (mediaItemType === 'album' && item.featured_track_title) {\n            const album = mediaItem as Album;\n            album.featuredTrack = {\n              name: item.featured_track_title,\n              position: item.featured_track_number,\n              streamUrl: item.audio_url?.['mp3-128']\n            };\n          }\n          else if (mediaItemType === 'track') {\n            (mediaItem as Track).streamUrl = item.audio_url?.['mp3-128'];\n          }\n          parsedItems.push(mediaItem);\n        }\n      });\n      return {\n        items: parsedItems,\n        hasMore: json.more_available,\n        filters: JSON.parse(json.filters)\n      };\n    }\n\n    throw new ParseError('Failed to parse releases by tag: invalid JSON data', json);\n  }\n}\n"]}