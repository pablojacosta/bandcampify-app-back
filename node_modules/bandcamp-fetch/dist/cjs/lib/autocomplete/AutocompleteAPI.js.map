{"version":3,"file":"AutocompleteAPI.js","sourceRoot":"","sources":["../../../../src/lib/autocomplete/AutocompleteAPI.ts"],"names":[],"mappings":";;;;;;AAAA,kDAA0C;AAC1C,0CAAwD;AAExD,4FAAoE;AACpE,+DAAuC;AAEvC,IAAY,oBAGX;AAHD,WAAY,oBAAoB;IAC9B,mCAAW,CAAA;IACX,6CAAqB,CAAA;AACvB,CAAC,EAHW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAG/B;AAQD,MAAqB,eAAe;IAKlC,MAAM,CAAC,cAAc,CAAC,MAA2C;QAC/D,IAAI,MAAM,CAAC,QAAQ,KAAK,oBAAoB,CAAC,GAAG,EAAE;YAChD,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;SACzC;QAED,OAAO,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;IAC/C,CAAC;IAED;;OAEG;IACO,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,MAA2C;QACpF,MAAM,OAAO,GAAG;YACd,WAAW,EAAE,MAAM,CAAC,KAAK;YACzB,KAAK,EAAE,MAAM,CAAC,KAAK,IAAI,CAAC;SACzB,CAAC;QAEF,MAAM,IAAI,GAAG,MAAM,IAAA,iBAAS,EAAC,gBAAI,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,EAAE,mBAAW,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACrF,OAAO,mCAAyB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC;IAED;;OAEG;IACO,MAAM,CAAC,KAAK,CAAC,wBAAwB,CAAC,MAA2C;QACzF,MAAM,OAAO,GAAG;YACd,CAAC,EAAE,MAAM,CAAC,KAAK;YACf,CAAC,EAAE,MAAM,CAAC,KAAK,IAAI,CAAC;YACpB,iBAAiB,EAAE,IAAI;SACxB,CAAC;QAEF,MAAM,IAAI,GAAG,MAAM,IAAA,iBAAS,EAAC,gBAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,EAAE,mBAAW,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC1F,OAAO,mCAAyB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACxD,CAAC;CACF;AAvCD,kCAuCC;AAED,MAAa,sBAAuB,SAAQ,eAAe;IAKzD,MAAM,CAAC,cAAc,CAAC,MAA2C;QAC/D,OAAO,iBAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;IAC9D,CAAC;CACF;AARD,wDAQC","sourcesContent":["import { URLS } from '../utils/Constants';\nimport { FetchMethod, fetchPage } from '../utils/Fetch';\nimport { AutoCompleteTag, AutocompleteLocation } from '../types/Autocomplete';\nimport AutocompleteResultsParser from './AutocompleteResultsParser';\nimport Limiter from '../utils/Limiter';\n\nexport enum AutocompleteItemType {\n  Tag = 'Tag',\n  Location = 'Location'\n}\n\nexport interface AutocompleteAPIGetSuggestionsParams {\n  query: string;\n  itemType: AutocompleteItemType;\n  limit?: number;\n}\n\nexport default class AutocompleteAPI {\n\n  static getSuggestions(params: AutocompleteAPIGetSuggestionsParams & { itemType: AutocompleteItemType.Location }): Promise<AutocompleteLocation[]>;\n  static getSuggestions(params: AutocompleteAPIGetSuggestionsParams & { itemType: AutocompleteItemType.Tag }): Promise<AutoCompleteTag[]>;\n  static getSuggestions(params: AutocompleteAPIGetSuggestionsParams): Promise<AutoCompleteTag[] | AutocompleteLocation[]>;\n  static getSuggestions(params: AutocompleteAPIGetSuggestionsParams): Promise<any> {\n    if (params.itemType === AutocompleteItemType.Tag) {\n      return this.getAutocompleteTags(params);\n    }\n\n    return this.getAutocompleteLocations(params);\n  }\n\n  /**\n   * @internal\n   */\n  protected static async getAutocompleteTags(params: AutocompleteAPIGetSuggestionsParams) {\n    const payload = {\n      search_term: params.query,\n      count: params.limit || 5\n    };\n\n    const json = await fetchPage(URLS.AUTOCOMPLETE.TAG, true, FetchMethod.POST, payload);\n    return AutocompleteResultsParser.parseTags(json);\n  }\n\n  /**\n   * @internal\n   */\n  protected static async getAutocompleteLocations(params: AutocompleteAPIGetSuggestionsParams) {\n    const payload = {\n      q: params.query,\n      n: params.limit || 5,\n      geocoder_fallback: true\n    };\n\n    const json = await fetchPage(URLS.AUTOCOMPLETE.LOCATION, true, FetchMethod.POST, payload);\n    return AutocompleteResultsParser.parseLocations(json);\n  }\n}\n\nexport class LimiterAutocompleteAPI extends AutocompleteAPI {\n\n  static getSuggestions(params: AutocompleteAPIGetSuggestionsParams & { itemType: AutocompleteItemType.Location; }): Promise<AutocompleteLocation[]>;\n  static getSuggestions(params: AutocompleteAPIGetSuggestionsParams & { itemType: AutocompleteItemType.Tag; }): Promise<AutoCompleteTag[]>;\n  static getSuggestions(params: AutocompleteAPIGetSuggestionsParams): Promise<AutocompleteLocation[] | AutoCompleteTag[]>;\n  static getSuggestions(params: AutocompleteAPIGetSuggestionsParams): Promise<any> {\n    return Limiter.schedule(() => super.getSuggestions(params));\n  }\n}\n"]}