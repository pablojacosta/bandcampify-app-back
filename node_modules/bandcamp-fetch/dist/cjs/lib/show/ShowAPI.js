"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LimiterShowAPI = void 0;
const ImageAPI_1 = __importDefault(require("../image/ImageAPI"));
const Constants_1 = require("../utils/Constants");
const Fetch_1 = require("../utils/Fetch");
const Limiter_1 = __importDefault(require("../utils/Limiter"));
const ShowListParser_1 = __importDefault(require("./ShowListParser"));
const ShowParser_1 = __importDefault(require("./ShowParser"));
class ShowAPI {
    static async getShow(params) {
        const imageConstants = await ImageAPI_1.default.getConstants();
        const opts = {
            showUrl: params.showUrl,
            imageBaseUrl: imageConstants.baseUrl,
            albumImageFormat: await ImageAPI_1.default.getFormat(params.albumImageFormat, 9),
            artistImageFormat: await ImageAPI_1.default.getFormat(params.artistImageFormat, 21),
            showImageFormat: await ImageAPI_1.default.getFormat(params.showImageFormat, 25)
        };
        const html = await (0, Fetch_1.fetchPage)(params.showUrl);
        return ShowParser_1.default.parseShow(html, opts);
    }
    static async list(params) {
        const imageConstants = await ImageAPI_1.default.getConstants();
        const opts = {
            imageBaseUrl: imageConstants.baseUrl,
            imageFormat: await ImageAPI_1.default.getFormat(params?.imageFormat, 25)
        };
        const json = await (0, Fetch_1.fetchPage)(Constants_1.URLS.SHOWS, true);
        return ShowListParser_1.default.parseList(json, opts);
    }
}
exports.default = ShowAPI;
class LimiterShowAPI extends ShowAPI {
    static async getShow(params) {
        return Limiter_1.default.schedule(() => super.getShow(params));
    }
    static async list(params) {
        return Limiter_1.default.schedule(() => super.list(params));
    }
}
exports.LimiterShowAPI = LimiterShowAPI;
//# sourceMappingURL=ShowAPI.js.map