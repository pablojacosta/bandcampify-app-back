{"version":3,"file":"FanAPI.js","sourceRoot":"","sources":["../../../../src/lib/fan/FanAPI.ts"],"names":[],"mappings":"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","sourcesContent":["import ImageAPI from '../image/ImageAPI';\nimport Fan, { FanItemsContinuation } from '../types/Fan';\nimport { ImageFormat } from '../types/Image';\nimport { URLS } from '../utils/Constants';\nimport { FetchError, FetchMethod, fetchPage } from '../utils/Fetch';\nimport { FanContinuationItemsResult, FanItemParseOptions, FanPageItemsResult } from './FanItemsBaseParser';\nimport FanCollectionParser from './FanCollectionParser';\nimport FanFollowingParser from './FanFollowingParser';\nimport FanInfoParser from './FanInfoParser';\nimport FanWishlistParser from './FanWishlistParser';\nimport Album from '../types/Album';\nimport Track from '../types/Track';\nimport UserKind from '../types/UserKind';\nimport Tag from '../types/Tag';\nimport Limiter from '../utils/Limiter';\n\nexport { FanPageItemsResult, FanContinuationItemsResult };\n\nexport interface FanAPIGetInfoParams {\n  username: string;\n  imageFormat: string | number | ImageFormat;\n}\n\nexport interface FanAPIGetItemsParams {\n  target: string | FanItemsContinuation;\n  imageFormat?: string | number | ImageFormat;\n}\n\n/**\n * @internal\n */\nexport interface FanAPIGetItemsFullParams<T> extends FanAPIGetItemsParams {\n  defaultImageFormat: number;\n  continuationUrl?: string;\n  parsePageFn: (html: string, opts: FanItemParseOptions) => FanPageItemsResult<T>;\n  parseContinuationFn: (json: any, continuation: FanItemsContinuation, opts: FanItemParseOptions) => FanContinuationItemsResult<T>;\n}\n\nexport default class FanAPI {\n\n  static async getInfo(params: FanAPIGetInfoParams): Promise<Fan> {\n    const imageConstants = await ImageAPI.getConstants();\n    const fanPageUrl = this.getFanPageUrl(params.username);\n    const opts = {\n      imageBaseUrl: imageConstants.baseUrl,\n      imageFormat: await ImageAPI.getFormat(params.imageFormat, 20)\n    };\n    const html = await fetchPage(fanPageUrl);\n    return FanInfoParser.parseInfo(html, opts);\n  }\n\n  static async getCollection(params: FanAPIGetItemsParams) {\n    return await this.getItems({\n      ...params,\n      defaultImageFormat: 9,\n      continuationUrl: URLS.FAN_CONTINUATION.COLLECTION,\n      parsePageFn: FanCollectionParser.parseCollectionFromPage.bind(FanCollectionParser),\n      parseContinuationFn: FanCollectionParser.parseCollectionFromContinuation.bind(FanCollectionParser)\n    });\n  }\n\n  static async getWishlist(params: FanAPIGetItemsParams) {\n    return await this.getItems({\n      ...params,\n      defaultImageFormat: 9,\n      continuationUrl: URLS.FAN_CONTINUATION.WISHLIST,\n      parsePageFn: FanWishlistParser.parseWishlistFromPage.bind(FanWishlistParser),\n      parseContinuationFn: FanWishlistParser.parseWishlistFromContinuation.bind(FanWishlistParser)\n    });\n  }\n\n  static async getFollowingArtistsAndLabels(params: FanAPIGetItemsParams) {\n    return await this.getItems({\n      ...params,\n      defaultImageFormat: 21,\n      continuationUrl: URLS.FAN_CONTINUATION.FOLLOWING_BANDS,\n      parsePageFn: FanFollowingParser.parseFollowingBandsFromPage.bind(FanFollowingParser),\n      parseContinuationFn: FanFollowingParser.parseFollowingBandsFromContinuation.bind(FanFollowingParser)\n    });\n  }\n\n  static async getFollowingGenres(params: FanAPIGetItemsParams) {\n    return await this.getItems({\n      ...params,\n      defaultImageFormat: 3,\n      continuationUrl: URLS.FAN_CONTINUATION.FOLLOWING_GENRES,\n      parsePageFn: FanFollowingParser.parseFollowingGenresFromPage.bind(FanFollowingParser),\n      parseContinuationFn: FanFollowingParser.parseFollowingGenresFromContinuation.bind(FanFollowingParser)\n    });\n  }\n\n  /**\n   * @internal\n   */\n  protected static async getItems<T>(params: FanAPIGetItemsFullParams<T>): Promise<FanPageItemsResult<T> | FanContinuationItemsResult<T>> {\n    const { target, imageFormat, defaultImageFormat, continuationUrl } = params;\n    const imageConstants = await ImageAPI.getConstants();\n    const opts = {\n      imageBaseUrl: imageConstants.baseUrl,\n      imageFormat: await ImageAPI.getFormat(imageFormat, defaultImageFormat)\n    };\n\n    if (!this.isContinuation(target)) {\n      const fanPageUrl = this.getFanPageUrl(target as string);\n      const html = await fetchPage(fanPageUrl);\n      return params.parsePageFn(html, opts);\n    }\n\n    // Continuation\n    if (!continuationUrl) {\n      throw new FetchError('Unable to fetch fan contents: target is continuation token but continuation URL is missing.');\n    }\n\n    const continuation = target as FanItemsContinuation;\n    const payload = {\n      fan_id: continuation.fanId,\n      older_than_token: continuation.token,\n      count: 20\n    };\n    const json = await fetchPage(continuationUrl, true, FetchMethod.POST, payload);\n    return params.parseContinuationFn(json, continuation, opts);\n  }\n\n  /**\n   * @internal\n  */\n  protected static getFanPageUrl(username: string) {\n    return `${URLS.SITE_URL}/${username}`;\n  }\n\n  /**\n   * @internal\n  */\n  protected static isContinuation(target: any) {\n    return typeof target === 'object' && target.fanId && target.token;\n  }\n}\n\nexport class LimiterFanAPI extends FanAPI {\n\n  static async getInfo(params: FanAPIGetInfoParams): Promise<Fan> {\n    return Limiter.schedule(() => super.getInfo(params));\n  }\n\n  static async getCollection(params: FanAPIGetItemsParams): Promise<FanPageItemsResult<NonNullable<Album | Track | null>> | FanContinuationItemsResult<NonNullable<Album | Track | null>>> {\n    return Limiter.schedule(() => super.getCollection(params));\n  }\n\n  static async getWishlist(params: FanAPIGetItemsParams): Promise<FanPageItemsResult<NonNullable<Album | Track | null>> | FanContinuationItemsResult<NonNullable<Album | Track | null>>> {\n    return Limiter.schedule(() => super.getWishlist(params));\n  }\n\n  static async getFollowingArtistsAndLabels(params: FanAPIGetItemsParams): Promise<FanPageItemsResult<UserKind> | FanContinuationItemsResult<UserKind>> {\n    return Limiter.schedule(() => super.getFollowingArtistsAndLabels(params));\n  }\n\n  static async getFollowingGenres(params: FanAPIGetItemsParams): Promise<FanPageItemsResult<Tag> | FanContinuationItemsResult<Tag>> {\n    return Limiter.schedule(() => super.getFollowingGenres(params));\n  }\n}\n"]}