{"version":3,"file":"Cache.js","sourceRoot":"","sources":["../../../../src/lib/utils/Cache.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,SAAS,MAAM,YAAY,CAAC;AAEnC,MAAM,CAAN,IAAY,aAGX;AAHD,WAAY,aAAa;IACvB,8BAAa,CAAA;IACb,wCAAuB,CAAA;AACzB,CAAC,EAHW,aAAa,KAAb,aAAa,QAGxB;AAED,MAAM,SAAS;IAKb,YAAY,GAAkC,EAAE,UAAkC;;QAJlF,iCAAoC;QACpC,wCAA2C;QAC3C,mCAAkB;QAGhB,uBAAA,IAAI,kBAAQ,GAAG,MAAA,CAAC;QAChB,uBAAA,IAAI,yBAAe,UAAU,MAAA,CAAC;QAC9B,uBAAA,IAAI,oBAAU,IAAI,SAAS,CAAC;YAC1B,WAAW,EAAE,GAAG;SACjB,CAAC,MAAA,CAAC;IACL,CAAC;IAED,MAAM,CAAC,IAAmB,EAAE,GAAW;QACrC,IAAI,uBAAA,IAAI,sBAAK,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE;YAC3B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;gBACjC,uBAAA,IAAI,wBAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;YACH,uBAAA,IAAI,sBAAK,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;SACvB;IACH,CAAC;IAED,aAAa,CAAC,IAAmB,EAAE,UAAkB;QACnD,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QACrC,uBAAA,IAAI,6BAAY,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC;IACtC,CAAC;IAED,aAAa,CAAC,IAAmB;QAC/B,OAAO,uBAAA,IAAI,6BAAY,CAAC,IAAI,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,uBAAA,IAAI,6BAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5E,CAAC;IAED,GAAG,CAAI,IAAmB,EAAE,GAAW;QACrC,OAAO,uBAAA,IAAI,wBAAO,CAAC,GAAG,CAAC,uBAAA,IAAI,oDAAa,MAAjB,IAAI,EAAc,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,GAAG,CAAI,IAAmB,EAAE,GAAW,EAAE,KAAQ;QAC/C,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,UAAU,KAAK,CAAC,EAAE;YACpB,OAAO,KAAK,CAAC;SACd;aACI,IAAI,UAAU,GAAG,CAAC,EAAE;YACvB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC;SAC1C;QACD,OAAO,uBAAA,IAAI,wBAAO,CAAC,GAAG,CAAC,uBAAA,IAAI,oDAAa,MAAjB,IAAI,EAAc,IAAI,EAAE,GAAG,CAAC,EAAE,KAAK,EAAE,uBAAA,IAAI,sBAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/E,CAAC;IAMD,aAAa,CAAC,IAAmB,EAAE,QAAiB;QAClD,IAAI,QAAQ,KAAK,SAAS,EAAE;YAC1B,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACrC;QACD,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,IAAI,CAAC,MAAM,GAAG,QAAQ,EAAE;YAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;gBAC/C,uBAAA,IAAI,wBAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aAC1B;SACF;IACH,CAAC;IAED,OAAO,CAAC,IAAmB;QACzB,OAAO,uBAAA,IAAI,wBAAO,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;IACxE,CAAC;IAED,KAAK,CAAC,IAAoB;QACxB,IAAI,CAAC,IAAI,EAAE;YACT,uBAAA,IAAI,wBAAO,CAAC,QAAQ,EAAE,CAAC;SACxB;aACI;YACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;gBACjC,uBAAA,IAAI,wBAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,KAAK,CAAC,QAAQ,CAAI,IAAmB,EAAE,GAAW,EAAE,eAAiC;QACnF,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAI,IAAI,EAAE,GAAG,CAAC,CAAC;QAC3C,IAAI,WAAW,KAAK,SAAS,EAAE;YAC7B,OAAO,WAAW,CAAC;SACpB;QACD,MAAM,KAAK,GAAG,MAAM,eAAe,EAAE,CAAC;QACtC,IAAI,CAAC,GAAG,CAAI,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;QAC9B,OAAO,KAAK,CAAC;IACf,CAAC;CACF;wMAxCc,IAAmB,EAAE,GAAW;IAC3C,OAAO,GAAG,IAAI,IAAI,GAAG,EAAE,CAAC;AAC1B,CAAC;AAwCH,MAAM,CAAC,MAAM,KAAK,GAAG,IAAI,SAAS,CAAC;IACjC,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,IAAI;IAC/B,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,GAAG;CAC1B,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC","sourcesContent":["import NodeCache from 'node-cache';\n\nexport enum CacheDataType {\n  Page = 'Page',\n  Constants = 'Constants'\n}\n\nclass CacheImpl {\n  #ttl: Record<CacheDataType, number>;\n  #maxEntries: Record<CacheDataType, number>;\n  #cache: NodeCache;\n\n  constructor(ttl: Record<CacheDataType, number>, maxEntries: Record<string, number>) {\n    this.#ttl = ttl;\n    this.#maxEntries = maxEntries;\n    this.#cache = new NodeCache({\n      checkperiod: 600\n    });\n  }\n\n  setTTL(type: CacheDataType, ttl: number) {\n    if (this.#ttl[type] !== ttl) {\n      this.getKeys(type).forEach((key) => {\n        this.#cache.ttl(key, ttl);\n      });\n      this.#ttl[type] = ttl;\n    }\n  }\n\n  setMaxEntries(type: CacheDataType, maxEntries: number) {\n    this.reduceEntries(type, maxEntries);\n    this.#maxEntries[type] = maxEntries;\n  }\n\n  getMaxEntries(type: CacheDataType) {\n    return this.#maxEntries[type] !== undefined ? this.#maxEntries[type] : -1;\n  }\n\n  get<T>(type: CacheDataType, key: string): T | undefined {\n    return this.#cache.get(this.#getCacheKey(type, key));\n  }\n\n  put<T>(type: CacheDataType, key: string, value: T) {\n    const maxEntries = this.getMaxEntries(type);\n    if (maxEntries === 0) {\n      return false;\n    }\n    else if (maxEntries > 0) {\n      this.reduceEntries(type, maxEntries - 1);\n    }\n    return this.#cache.set(this.#getCacheKey(type, key), value, this.#ttl[type]);\n  }\n\n  #getCacheKey(type: CacheDataType, key: string): string {\n    return `${type}.${key}`;\n  }\n\n  reduceEntries(type: CacheDataType, reduceTo?: number) {\n    if (reduceTo === undefined) {\n      reduceTo = this.getMaxEntries(type);\n    }\n    const keys = this.getKeys(type);\n    if (keys.length > reduceTo) {\n      for (let i = 0; i < keys.length - reduceTo; i++) {\n        this.#cache.del(keys[i]);\n      }\n    }\n  }\n\n  getKeys(type: CacheDataType): string[] {\n    return this.#cache.keys().filter((key) => key.startsWith(`${type}.`));\n  }\n\n  clear(type?: CacheDataType) {\n    if (!type) {\n      this.#cache.flushAll();\n    }\n    else {\n      this.getKeys(type).forEach((key) => {\n        this.#cache.del(key);\n      });\n    }\n  }\n\n  async getOrSet<T>(type: CacheDataType, key: string, promiseCallback: () => Promise<T>): Promise<T> {\n    const cachedValue = this.get<T>(type, key);\n    if (cachedValue !== undefined) {\n      return cachedValue;\n    }\n    const value = await promiseCallback();\n    this.put<T>(type, key, value);\n    return value;\n  }\n}\n\nexport const Cache = new CacheImpl({\n  [CacheDataType.Constants]: 3600,\n  [CacheDataType.Page]: 300\n}, { page: 10 });\n"]}