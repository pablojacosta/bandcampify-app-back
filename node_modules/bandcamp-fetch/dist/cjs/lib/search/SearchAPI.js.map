{"version":3,"file":"SearchAPI.js","sourceRoot":"","sources":["../../../../src/lib/search/SearchAPI.ts"],"names":[],"mappings":"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","sourcesContent":["import { URL } from 'url';\nimport ImageAPI from '../image/ImageAPI';\nimport { ImageFormat } from '../types/Image';\nimport { URLS } from '../utils/Constants';\nimport { fetchPage } from '../utils/Fetch';\nimport SearchResultsParser from './SearchResultsParser';\nimport { SearchResultAlbum, SearchResultAny, SearchResultArtist, SearchResultFan, SearchResultLabel, SearchResultTrack, SearchResults } from '../types/Search';\nimport Limiter from '../utils/Limiter';\n\nexport enum SearchItemType {\n  All = 'All',\n  ArtistsAndLabels = 'ArtistsAndLabels',\n  Albums = 'Albums',\n  Tracks = 'Tracks',\n  Fans = 'Fans'\n}\n\nexport interface SearchAPISearchParams {\n  query: string;\n  page?: number;\n  albumImageFormat?: string | number | ImageFormat;\n  artistImageFormat?: string | number | ImageFormat;\n}\n\nexport default class SearchAPI {\n\n  static async all(params: SearchAPISearchParams) {\n    return this.search({ ...params, itemType: SearchItemType.All });\n  }\n\n  static async artistsAndLabels(params: SearchAPISearchParams) {\n    return this.search({ ...params, itemType: SearchItemType.ArtistsAndLabels });\n  }\n\n  static async albums(params: SearchAPISearchParams) {\n    return this.search({ ...params, itemType: SearchItemType.Albums });\n  }\n\n  static async tracks(params: SearchAPISearchParams) {\n    return this.search({ ...params, itemType: SearchItemType.Tracks });\n  }\n\n  static async fans(params: SearchAPISearchParams) {\n    return this.search({ ...params, itemType: SearchItemType.Fans });\n  }\n\n  /**\n   * @internal\n   */\n  protected static async search(params: SearchAPISearchParams & { itemType: SearchItemType.ArtistsAndLabels }): Promise<SearchResults<SearchResultArtist | SearchResultLabel>>;\n  protected static async search(params: SearchAPISearchParams & { itemType: SearchItemType.Albums }): Promise<SearchResults<SearchResultAlbum>>;\n  protected static async search(params: SearchAPISearchParams & { itemType: SearchItemType.Tracks }): Promise<SearchResults<SearchResultTrack>>;\n  protected static async search(params: SearchAPISearchParams & { itemType: SearchItemType.Fans }): Promise<SearchResults<SearchResultFan>>;\n  protected static async search(params: SearchAPISearchParams & { itemType: SearchItemType.All }): Promise<SearchResults<SearchResultAny>>;\n  protected static async search(params: SearchAPISearchParams & { itemType: SearchItemType }): Promise<any> {\n    const opts = {\n      itemType: params.itemType || SearchItemType.All,\n      albumImageFormat: await ImageAPI.getFormat(params.albumImageFormat, 9),\n      artistImageFormat: await ImageAPI.getFormat(params.artistImageFormat, 21)\n    };\n    const html = await fetchPage(this.getSearchUrl(params));\n    return SearchResultsParser.parseResults(html, opts);\n  }\n\n  /**\n   * @internal\n   */\n  protected static getSearchUrl(params: SearchAPISearchParams & { itemType: SearchItemType }) {\n    const urlObj = new URL(URLS.SEARCH);\n    urlObj.searchParams.set('q', params.query);\n    urlObj.searchParams.set('page', (params.page || 1).toString());\n    switch (params.itemType) {\n      case SearchItemType.ArtistsAndLabels:\n        urlObj.searchParams.set('item_type', 'b');\n        break;\n      case SearchItemType.Albums:\n        urlObj.searchParams.set('item_type', 'a');\n        break;\n      case SearchItemType.Tracks:\n        urlObj.searchParams.set('item_type', 't');\n        break;\n      case SearchItemType.Fans:\n        urlObj.searchParams.set('item_type', 'f');\n        break;\n      default:\n    }\n    return urlObj.toString();\n  }\n}\n\nexport class LimiterSearchAPI extends SearchAPI {\n\n  static async all(params: SearchAPISearchParams): Promise<SearchResults<SearchResultAny>> {\n    return Limiter.schedule(() => super.all(params));\n  }\n\n  static async artistsAndLabels(params: SearchAPISearchParams): Promise<SearchResults<SearchResultArtist | SearchResultLabel>> {\n    return Limiter.schedule(() => super.artistsAndLabels(params));\n  }\n\n  static async albums(params: SearchAPISearchParams): Promise<SearchResults<SearchResultAlbum>> {\n    return Limiter.schedule(() => super.albums(params));\n  }\n\n  static async tracks(params: SearchAPISearchParams): Promise<SearchResults<SearchResultTrack>> {\n    return Limiter.schedule(() => super.tracks(params));\n  }\n\n  static async fans(params: SearchAPISearchParams): Promise<SearchResults<SearchResultFan>> {\n    return Limiter.schedule(() => super.fans(params));\n  }\n}\n"]}