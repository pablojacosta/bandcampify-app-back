import Fan, { FanItemsContinuation } from '../types/Fan';
import { ImageFormat } from '../types/Image';
import { FanContinuationItemsResult, FanItemParseOptions, FanPageItemsResult } from './FanItemsBaseParser';
import Album from '../types/Album';
import Track from '../types/Track';
import UserKind from '../types/UserKind';
import Tag from '../types/Tag';
export { FanPageItemsResult, FanContinuationItemsResult };
export interface FanAPIGetInfoParams {
    username: string;
    imageFormat: string | number | ImageFormat;
}
export interface FanAPIGetItemsParams {
    target: string | FanItemsContinuation;
    imageFormat?: string | number | ImageFormat;
}
/**
 * @internal
 */
export interface FanAPIGetItemsFullParams<T> extends FanAPIGetItemsParams {
    defaultImageFormat: number;
    continuationUrl?: string;
    parsePageFn: (html: string, opts: FanItemParseOptions) => FanPageItemsResult<T>;
    parseContinuationFn: (json: any, continuation: FanItemsContinuation, opts: FanItemParseOptions) => FanContinuationItemsResult<T>;
}
export default class FanAPI {
    static getInfo(params: FanAPIGetInfoParams): Promise<Fan>;
    static getCollection(params: FanAPIGetItemsParams): Promise<FanPageItemsResult<NonNullable<Track | Album | null>> | FanContinuationItemsResult<NonNullable<Track | Album | null>>>;
    static getWishlist(params: FanAPIGetItemsParams): Promise<FanPageItemsResult<NonNullable<Track | Album | null>> | FanContinuationItemsResult<NonNullable<Track | Album | null>>>;
    static getFollowingArtistsAndLabels(params: FanAPIGetItemsParams): Promise<FanPageItemsResult<UserKind> | FanContinuationItemsResult<UserKind>>;
    static getFollowingGenres(params: FanAPIGetItemsParams): Promise<FanPageItemsResult<Tag> | FanContinuationItemsResult<Tag>>;
    /**
     * @internal
     */
    protected static getItems<T>(params: FanAPIGetItemsFullParams<T>): Promise<FanPageItemsResult<T> | FanContinuationItemsResult<T>>;
    /**
     * @internal
    */
    protected static getFanPageUrl(username: string): string;
    /**
     * @internal
    */
    protected static isContinuation(target: any): any;
}
export declare class LimiterFanAPI extends FanAPI {
    static getInfo(params: FanAPIGetInfoParams): Promise<Fan>;
    static getCollection(params: FanAPIGetItemsParams): Promise<FanPageItemsResult<NonNullable<Album | Track | null>> | FanContinuationItemsResult<NonNullable<Album | Track | null>>>;
    static getWishlist(params: FanAPIGetItemsParams): Promise<FanPageItemsResult<NonNullable<Album | Track | null>> | FanContinuationItemsResult<NonNullable<Album | Track | null>>>;
    static getFollowingArtistsAndLabels(params: FanAPIGetItemsParams): Promise<FanPageItemsResult<UserKind> | FanContinuationItemsResult<UserKind>>;
    static getFollowingGenres(params: FanAPIGetItemsParams): Promise<FanPageItemsResult<Tag> | FanContinuationItemsResult<Tag>>;
}
//# sourceMappingURL=FanAPI.d.ts.map