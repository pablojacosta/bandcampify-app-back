{"version":3,"file":"AutocompleteResultsParser.js","sourceRoot":"","sources":["../../../../src/lib/autocomplete/AutocompleteResultsParser.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAE5C,MAAM,CAAC,OAAO,OAAO,yBAAyB;IAE5C,MAAM,CAAC,SAAS,CAAC,IAAS;QACxB,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,aAAa,CAAC,EAAE;YACtC,MAAM,GAAG,GAAG,IAAI,CAAC,aAA2B,CAAC;YAC7C,OAAO,GAAG,CAAC,GAAG,CAAkB,CAAC,OAAY,EAAE,EAAE,CAAC,CAAC;gBACjD,IAAI,EAAE,KAAK;gBACX,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,KAAK,EAAE,OAAO,CAAC,aAAa;gBAC5B,IAAI,EAAE,OAAO,CAAC,QAAQ;aACvB,CAAC,CAAC,CAAC;SACL;QACD,MAAM,IAAI,UAAU,CAAC,+EAA+E,EAAE,IAAI,CAAC,CAAC;IAC9G,CAAC;IAED,MAAM,CAAC,cAAc,CAAC,IAAS;QAC7B,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE;YAChC,MAAM,GAAG,GAAG,IAAI,CAAC,OAAqB,CAAC;YACvC,OAAO,GAAG,CAAC,GAAG,CAAuB,CAAC,YAAiB,EAAE,EAAE,CAAC,CAAC;gBAC3D,IAAI,EAAE,UAAU;gBAChB,KAAK,EAAE,QAAQ,CAAC,YAAY,CAAC,EAAE,EAAE,EAAE,CAAC;gBACpC,IAAI,EAAE,YAAY,CAAC,IAAI;gBACvB,QAAQ,EAAE,YAAY,CAAC,QAAQ;aAChC,CAAC,CAAC,CAAC;SACL;QACD,MAAM,IAAI,UAAU,CAAC,8EAA8E,EAAE,IAAI,CAAC,CAAC;IAC7G,CAAC;CACF","sourcesContent":["import { AutoCompleteTag, AutocompleteLocation } from '../types/Autocomplete';\nimport { ParseError } from '../utils/Parse';\n\nexport default class AutocompleteResultsParser {\n\n  static parseTags(json: any): AutoCompleteTag[] {\n    if (Array.isArray(json?.matching_tags)) {\n      const arr = json.matching_tags as Array<any>;\n      return arr.map<AutoCompleteTag>((tagData: any) => ({\n        type: 'tag',\n        count: tagData.count,\n        value: tagData.tag_norm_name,\n        name: tagData.tag_name\n      }));\n    }\n    throw new ParseError('Failed to parse autocomplete tags: JSON invalid or missing \\'matching_tags\\'.', json);\n  }\n\n  static parseLocations(json: any): AutocompleteLocation[] {\n    if (Array.isArray(json?.results)) {\n      const arr = json.results as Array<any>;\n      return arr.map<AutocompleteLocation>((locationData: any) => ({\n        type: 'location',\n        value: parseInt(locationData.id, 10),\n        name: locationData.name,\n        fullName: locationData.fullname\n      }));\n    }\n    throw new ParseError('Failed to parse autocomplete locations: JSON invalid or missing \\'results\\'.', json);\n  }\n}\n"]}